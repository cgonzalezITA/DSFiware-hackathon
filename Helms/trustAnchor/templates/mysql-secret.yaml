{{- if .Values.generatePasswords.enabled }}
{{- $mySqlRootPassword := default (randAlphaNum 64) .Values.generatePasswords.mySqlRootPassword | b64enc | quote }}
{{- $mysqlPassword := randAlphaNum 64 | b64enc | quote }}
{{- $mysqlReplPassword := randAlphaNum 64 | b64enc | quote }}
{{- $secret_name := default "trust-anchor-secret" .Values.generatePasswords.secretName }}
{{- $mySqlRootKey := default "mysql-root-password" .Values.generatePasswords.mySqlRootKey}}
{{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace $secret_name) }}
{{- if $existingSecret }}
{{- $mySqlRootPassword = index $existingSecret.data $mySqlRootKey }}
{{- $mysqlPassword = index $existingSecret.data "mysql-password" }}
{{- $mysqlReplPassword = index $existingSecret.data "mysql-replication-password" }}
{{- else -}}
{{- $mysqlRootPassword := randAlphaNum 64 | b64enc | quote }}
{{- $mysqlPassword := randAlphaNum 64 | b64enc | quote }}
{{- $mysqlReplPassword := randAlphaNum 64 | b64enc | quote }}
{{- end -}}

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.generatePasswords.secretName }}
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    "helm.sh/resource-policy": "keep"
  labels:
    {{- include "trust-anchor.labels" . | nindent 4 }}
data:
  {{ $mySqlRootKey }}: {{ $mySqlRootPassword }}
  mysql-password: {{ $mysqlPassword }}
  mysql-replication-password: {{ $mysqlReplPassword }}
{{- end }}