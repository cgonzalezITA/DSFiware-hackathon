{{- if .Values.generatePasswords.enabled }}
{{- $mySqlRootPassword := default (randAlphaNum 64) .Values.generatePasswords.mySqlRootPassword | b64enc | quote }}
{{- $secret_name := default "trust-anchor-secret" .Values.generatePasswords.secretName }}

{{- $mySqlRootKey := default "mysql-root-password" .Values.generatePasswords.mySqlRootKey}}
{{- if not .Values.generatePasswords.mySqlRootPassword }}
{{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace $secret_name) }}
{{- if $existingSecret }}
{{- $mySqlRootPassword = index $existingSecret.data $mySqlRootKey }}
{{- end -}}
{{- end -}}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.generatePasswords.secretName }}
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    "helm.sh/resource-policy": "keep"
  labels:
    {{- include "trust-anchor.labels" . | nindent 4 }}
data:
  {{ $mySqlRootKey }}: {{ $mySqlRootPassword }}
{{- end }}
