{{- if and (.Values.keycloak).enabled ((((.Values.keycloak).global).postgresql).auth).existingSecret }}
{{- $postgresSecretName := default "postgresql-secret" .Values.keycloak.global.postgresql.auth.existingSecret }}
{{- $postgresDBPasswordKey := "password" }} # KEYCLOAK_DATABASE_PASSWORD
{{- $postgresPasswordKey := "postgres-password" }} # POSTGRES_POSTGRES_PASSWORD
{{- $postgresDBPassword := randAlphaNum 64 | b64enc | quote }}
{{- $postgresPassword := randAlphaNum 64 | b64enc | quote }}
{{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace $postgresSecretName) }}
{{- if $existingSecret }}
{{- $postgresDBPassword = index $existingSecret.data $postgresDBPasswordKey }}
{{- $postgresPassword = index $existingSecret.data $postgresPasswordKey }}
{{- end }}

kind: Secret
apiVersion: v1
type: Opaque
metadata:
    name: {{ $postgresSecretName }}
    namespace: {{ $.Release.Namespace | quote }}
    annotations:
        "helm.sh/resource-policy": "keep"
data:
    {{ $postgresDBPasswordKey }}: {{ $postgresDBPassword }}
    {{ $postgresPasswordKey }}: {{ $postgresPassword }}
{{- end }}