{{- if and (.Values.odrlPolicyRegistration).enabled -}}
{{- $jobName := "odrl-policy-registration-job" }}
{{- $backoffLimit := default 5 .Values.odrlPolicyRegistration.job.backoffLimit | int }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $jobName }}
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    # "helm.sh/hook": {{ default "post-install,post-upgrade" .Values.odrlPolicyRegistration.job.hook }}
    "helm.sh/hook-delete-policy": {{ default "before-hook-creation" .Values.odrlPolicyRegistration.job.hookDeletePolicy }}
    "helm.sh/hook-weight": "1"
spec:
  ttlSecondsAfterFinished: 15
  backoffLimit: {{ $backoffLimit }}
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: {{ $jobName }}
          image: alpine/curl
          env:
          - name: ODRLPAPURL            
            value: {{ printf "%s" .Values.odrlPolicyRegistration.odrlPAPEndpoint }}
          {{- range $policyKey, $policy := .Values.odrlPolicyRegistration.odrlPolicies }}
          - name: POLICY_{{ $policyKey }}
            value: {{ $policy | toJson | quote }}
          {{- end }}
          command:
          - /bin/sh
          - -ec
          - |
            {{- range $policyKey, $policy := .Values.odrlPolicyRegistration.odrlPolicies }}
            POLICYKEYNAME= {{- $policyKey | quote }}
            echo -e "\n---\n\t*** Trying to register policy $POLICYKEYNAME ***"
            
            POLICYJSON=$POLICY_{{ $policyKey }}
            # echo "POLICYJSON=$POLICYJSON"
            POLICYJSON="'$POLICYJSON"
            POLICYJSON="$POLICYJSON'"
            # echo "POLICYJSON2=$POLICYJSON"

            # First Deletes the $POLICYKEYNAME as a PUT on an existing one returns error:
            # {"details":"Error id 4751258d-5d1e-4095-ab45-9e685d58d9ed-3","stack":""}
            CMD="curl -s -X DELETE $ODRLPAPURL/$POLICYKEYNAME"
            # echo "Running CMD=$CMD"
            eval $CMD  
            CMD="curl -X PUT $ODRLPAPURL/$POLICYKEYNAME \
                    -H 'accept: */*' \
                    -H 'Content-Type: application/json' \
                    -d $POLICYJSON"
            # echo "Running CMD=$CMD"
            eval $CMD  

            {{ end }}
{{- end }}
