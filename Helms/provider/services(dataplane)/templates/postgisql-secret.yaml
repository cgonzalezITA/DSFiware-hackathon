{{- if and (.Values.postgis).enabled (and ((.Values.postgis).generatePasswords).enabled ((.Values.postgis).generatePasswords).secretName) }}
{{- $postgisSecretName := .Values.postgis.generatePasswords.secretName }}
{{- $postgisAdminPasswordKey := default "postgres-admin-password" .Values.postgis.auth.secretKeys.adminPasswordKey }}
{{- $postgisUserPassword := default "postgres-password" .Values.postgis.auth.secretKeys.userPasswordKey }}
{{- $postgisAdminPassword := randAlphaNum 64 | b64enc | quote }}
{{- $postgisPassword := randAlphaNum 64 | b64enc | quote }}
{{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace $postgisSecretName) }}
{{- if $existingSecret }}
{{- $postgisAdminPassword = index $existingSecret.data $postgisAdminPasswordKey }}
{{- $postgisPassword = index $existingSecret.data $postgisUserPassword }}
{{- end }}

kind: Secret
apiVersion: v1
type: Opaque
metadata:
    name: {{ $postgisSecretName }}
    namespace: {{ $.Release.Namespace | quote }}
    annotations:
        "helm.sh/resource-policy": "keep"
data:
    {{ $postgisAdminPasswordKey }}: {{ $postgisAdminPassword }}
    {{ $postgisUserPassword }}: {{ $postgisPassword }}
{{ end }}